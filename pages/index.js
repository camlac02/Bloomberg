import { useState, useEffect } from 'react';
import useSWR from 'swr';
import Head from 'next/head';
import Image from 'next/image';
import { Inter } from 'next/font/google';
import styles from '@/styles/Home.module.css';
import Chart from '../components/chart';
import {
  Chart as ChartJS,
  CategoryScale,
  LinearScale,
  PointElement,
  LineElement,
  Title,
  Tooltip,
  Legend,
} from 'chart.js';
import { Line } from 'react-chartjs-2';

const fetcher = (...args) => fetch(...args).then((res) => res.json());
ChartJS.register(
  CategoryScale,
  LinearScale,
  PointElement,
  LineElement,
  Title,
  Tooltip,
  Legend
);

export default function Home() {
  const [message, setMessage] = useState('');
  const [chaco, setChaco] = useState(0);

  const { data, error, isLoading } = useSWR(`/api`, fetcher);
  const handleChange = (event) => {
    setMessage(event.target.value);
  };

  const handleClick = () => {
    setChaco(message);
    setMessage('');
  };

  const options = {
    responsive: true,
    plugins: {
        legend: {
        position: 'top',
        },
        title: {
        display: true,
        text: 'Chart.js Line Chart',
        },
    },
    };


  if (error) return <div>Failed to load</div>;
  if (isLoading) return <div>loading...</div>;

if (data) {
  const API = JSON.parse(data?.messages[0])

  const finalData = {
      labels: API.map((data) => data.ts),
      datasets: [
        {
          label: 'BacktesterMomentum',
          data: API.map((data) => data.close),
          borderColor: 'rgb(53, 162, 235)',
          backgroundColor: 'rgba(53, 162, 235, 0.5)',
        }
      ],
    };
  return (
    <>
      <Head>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <main className={styles.main}>
      <div className="flex flex-row">
  <div className="basis-1/2">02</div>
  <div className="basis-1/2"><Line options={options} data={finalData}/></div>
</div>
        {data.name}
        <input
          type='text'
          id='message'
          name='message'
          onChange={handleChange}
          value={message}
        />
        <button onClick={handleClick}>Envoyer</button>
      </main>
    </>
  )};
}
